{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(ls:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(git config:*)",
      "Bash(git push:*)",
      "Bash(dpkg:*)",
      "Bash(grep:*)",
      "Bash(docker compose:*)",
      "Bash(docker system:*)",
      "Bash(find:*)",
      "Bash(docker builder:*)",
      "Bash(docker volume prune:*)",
      "Bash(docker build:*)",
      "Bash(chmod:*)",
      "Bash(docker image prune:*)",
      "Bash(docker run:*)",
      "Bash(cp:*)",
      "Bash(tree:*)",
      "Bash(docker rm:*)",
      "Bash(docker logs:*)",
      "Bash(docker stop:*)",
      "Bash(docker-compose up:*)",
      "Bash(for port in 80 443 3000 5432 6379 19006)",
      "Bash(do lsof:*)",
      "Bash(/dev/null)",
      "Bash(echo:*)",
      "Bash(echo \"Port $port available\")",
      "Bash(done)",
      "Bash(rg:*)",
      "Bash(curl:*)",
      "Bash(git commit:*)",
      "Bash(docker exec:*)",
      "Bash(./monitor-error-log.sh:*)",
      "Bash(bash:*)",
      "Bash(./validate-deployment.sh)",
      "WebFetch(domain:www.pexels.com)",
      "WebFetch(domain:pixabay.com)",
      "Bash(systemctl list-units:*)",
      "Bash(apt:*)",
      "Bash(apt install:*)",
      "Bash(useradd:*)",
      "Bash(ln:*)",
      "Bash(chown:*)",
      "Bash(systemctl restart:*)",
      "Bash(systemctl:*)",
      "Bash(cat:*)",
      "Bash(docker:*)",
      "Bash(git checkout:*)",
      "Bash(git restore:*)",
      "Bash(~/.local/bin/gh:*)",
      "Bash(gh auth:*)",
      "Bash(ssh-keygen:*)",
      "Bash(git remote set-url:*)",
      "Bash(ssh:*)",
      "Bash(sudo apt-get:*)",
      "Bash(scp:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(sudo docker-compose:*)",
      "Bash(./deploy-frontend.sh:*)",
      "WebFetch(domain:github.com)",
      "Bash(./check-server-deps.sh:*)",
      "Bash(./deploy-https.sh:*)",
      "Bash(nslookup:*)",
      "Bash(ping:*)",
      "Bash(./deploy-letsencrypt.sh:*)",
      "Bash(./init-letsencrypt.sh:*)",
      "Bash(./init-blue.sh:*)",
      "Bash(./deploy-blue.sh)",
      "Bash(host:*)",
      "Bash(/mnt/c/Users/jhusband/price-scanner-app/deployment/deploy-blue-safe.sh:*)",
      "Bash(/mnt/c/Users/jhusband/price-scanner-app/deployment/fix-blue-nginx.sh:*)",
      "Bash(/mnt/c/Users/jhusband/price-scanner-app/deployment/fix-all.sh:*)",
      "Bash(/mnt/c/Users/jhusband/price-scanner-app/deployment/fix-prod-now.sh:*)",
      "Bash(/mnt/c/Users/jhusband/price-scanner-app/deployment/unfuck-production.sh:*)",
      "Bash(/mnt/c/Users/jhusband/price-scanner-app/commit-current-state.sh:*)",
      "Bash(./reorganize-structure.sh:*)",
      "Bash(./scripts/implement-router.sh:*)",
      "Bash(./scripts/deploy-blue-complete.sh:*)",
      "Bash(./scripts/fix-blue-frontend.sh:*)",
      "Bash(git ls-tree:*)",
      "Bash(./scripts/add-enhanced-to-blue.sh:*)",
      "Bash(./scripts/deploy-blue-fixed.sh:*)",
      "Bash(./scripts/debug-blue-blank-screen.sh:*)",
      "Bash(./scripts/fix-blue-styles.sh:*)",
      "Bash(./scripts/fix-blue-final.sh:*)",
      "Bash(./scripts/fix-blue-image-picker.sh:*)",
      "Bash(./scripts/fix-blue-processing.sh:*)",
      "Bash(./scripts/fix-all-blue-bugs.sh:*)",
      "Bash(./scripts/diagnose-blue-only.sh:*)",
      "Bash(./scripts/add-visible-diagnostics.sh:*)",
      "Bash(./scripts/fix-blue-syntax-only.sh:*)",
      "Bash(./scripts/deploy-blue-syntax-fix.sh:*)",
      "Bash(./scripts/fix-blue-display-issues.sh:*)",
      "Bash(./scripts/integrate-v2-features.sh:*)",
      "Bash(./scripts/integrate-v2-frontend.sh:*)",
      "Bash(./scripts/integrate-frontend-v2.sh:*)",
      "Bash(./scripts/deploy-green-final.sh:*)",
      "Bash(./scripts/generate-green-ssl.sh:*)",
      "Bash(./scripts/fix-nginx-green.sh:*)",
      "Bash(./scripts/fix-mac-compatibility.sh:*)",
      "Bash(./scripts/deploy-green-mac-fix.sh:*)",
      "Bash(npx playwright:*)",
      "Bash(gh issue list:*)",
      "Bash(./scripts/create-initial-issues.sh:*)",
      "Bash(./scripts/create-feature-issues.sh:*)",
      "Bash(gh repo view:*)",
      "Bash(gh issue create:*)",
      "Bash(./scripts/create-all-features.sh:*)",
      "Bash(./scripts/link-tests-to-issues.sh:*)",
      "Bash(gh workflow:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(./migrate-to-branches.sh:*)"
    ],
    "deny": []
  }
}