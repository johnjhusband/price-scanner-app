# Build stage for React Native mobile app
FROM node:20-alpine AS builder

# Install system dependencies and clean cache
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git && \
    rm -rf /var/cache/apk/*

WORKDIR /app

# Copy package files first for better cache utilization
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci

# Copy all source files after dependencies are installed
COPY . .

# Build the app for production
RUN npx expo export --platform web --output-dir dist

# Production stage
FROM nginx:alpine

# Install runtime dependencies and clean cache
RUN apk add --no-cache \
    curl \
    ca-certificates && \
    rm -rf /var/cache/apk/*

# Copy nginx configuration file
COPY nginx-default.conf /etc/nginx/conf.d/default.conf

# Copy built assets from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Create non-root user with UID > 10000 and set permissions in one layer
RUN addgroup -g 10001 -S nginx-user && \
    adduser -S nginx-user -u 10001 -G nginx-user && \
    # Change ownership of nginx directories
    chown -R nginx-user:nginx-user /var/cache/nginx && \
    chown -R nginx-user:nginx-user /var/log/nginx && \
    chown -R nginx-user:nginx-user /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R nginx-user:nginx-user /var/run/nginx.pid && \
    chown -R nginx-user:nginx-user /usr/share/nginx/html && \
    # Update nginx config to run as non-root
    sed -i 's/user nginx;/user nginx-user;/g' /etc/nginx/nginx.conf

# Add metadata labels
LABEL maintainer="My Thrifting Buddy Team" \
      version="1.0.0" \
      description="Frontend web app for My Thrifting Buddy - AI-powered resale value estimation"

EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

USER nginx-user

CMD ["nginx", "-g", "daemon off;"]