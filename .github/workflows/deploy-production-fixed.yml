name: Deploy Production
on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to app.flippi.ai
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 157.245.142.145
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/app.flippi.ai
            # Force reset to match remote master - handles divergent branches
            git fetch origin
            git reset --hard origin/master
            git clean -fd
            
            # Install dependencies and build
            cd backend && npm install --production
            cd ../mobile-app && npm install && npx expo export --platform web --output-dir dist
            
            # Apply post-deployment nginx configuration for legal pages
            if [ -f scripts/post-deploy-nginx.sh ]; then
              echo "=== Applying nginx configuration for legal pages ==="
              bash scripts/post-deploy-nginx.sh
            fi
            
            # Fix any nginx configuration issues before reload
            nginx -t || echo "Nginx config has issues, attempting to fix..."
            
            # Remove duplicate location blocks if they exist
            sed -i '0,/location = \/privacy/{//!b; :a; n; /location = \/privacy/d; ba}' /etc/nginx/sites-available/app.flippi.ai
            sed -i '0,/location = \/terms/{//!b; :a; n; /location = \/terms/d; ba}' /etc/nginx/sites-available/app.flippi.ai
            
            # Test nginx config again
            nginx -t
            
            # Debug: Check what directory PM2 is serving from
            echo "=== PM2 prod-frontend config ==="
            pm2 describe prod-frontend | grep -E "exec cwd|script|args" || true
            echo "=== Checking directories ==="
            ls -la /var/www/app.flippi.ai/mobile-app/ | grep -E "dist|web-build" || true
            echo "=== Files in dist ==="
            ls -la /var/www/app.flippi.ai/mobile-app/dist/ | head -5 || true
            
            # Just restart, don't delete
            pm2 restart prod-backend prod-frontend
            
            # Wait for services to start
            sleep 3
            
            # Check if backend is running
            pm2 show prod-backend || true
            curl -s http://localhost:3000/health || echo "Backend not responding"
            
            # Clear nginx cache
            nginx -s reload