name: Deploy Staging
on:
  push:
    branches: [staging]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to green.flippi.ai
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 157.245.142.145
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/green.flippi.ai
            # Reset any local changes to avoid merge conflicts
            git reset --hard HEAD
            git clean -fd
            # Force update to match remote exactly
            git fetch origin staging
            git reset --hard origin/staging
            
            # Install dependencies
            cd backend && npm install --production
            
            # Build frontend (no timeout, like develop workflow)
            cd ../mobile-app && npm install && npx expo export --platform web --output-dir dist
            
            # Copy web assets that Expo doesn't include
            cp web-styles.css dist/ || echo "Warning: Could not copy web-styles.css"
            
            # Apply growth routes configuration
            cd /var/www/green.flippi.ai
            if [ -f scripts/post-deploy-all-routes.sh ]; then
              bash scripts/post-deploy-all-routes.sh green.flippi.ai 3001
            elif [ -f scripts/add-growth-routes-nginx.sh ]; then
              bash scripts/add-growth-routes-nginx.sh green.flippi.ai 3001
            fi
            
            # Fix nginx SSL configuration
            if [ -f scripts/fix-nginx-ssl-comprehensive.sh ]; then
              bash scripts/fix-nginx-ssl-comprehensive.sh || true
            fi
            
            # Fix production nginx port mapping bug
            if [ -f scripts/fix-production-nginx-ports.sh ]; then
              bash scripts/fix-production-nginx-ports.sh || true
            fi
            
            # Restart PM2 services
            pm2 restart staging-backend staging-frontend
            
            # Wait for services to start
            sleep 5
            
            # Check if backend is running
            pm2 show staging-backend || true
            curl -s http://localhost:3001/health || echo "Backend health check"
            
            # Reload nginx
            nginx -s reload || systemctl reload nginx || echo "Nginx reload attempted"
