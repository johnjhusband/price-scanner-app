name: Deploy Development V2 - Clean Architecture
on:
  push:
    branches: [develop]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: mobile-app/package-lock.json

      - name: Build Frontend
        run: |
          echo "=== Building frontend in clean environment ==="
          cd mobile-app
          
          # Clean install dependencies
          npm ci
          
          # Clear any caches
          npx expo start --clear --offline --no-dev --max-workers 1 &
          EXPO_PID=$!
          sleep 5
          kill $EXPO_PID 2>/dev/null || true
          
          # Build the app
          npx expo export --platform web --output-dir dist --clear
          
          # Copy additional assets
          cp web-styles.css dist/ || echo "Warning: web-styles.css not found"
          cp *.html dist/ || echo "Note: No HTML files to copy"
          
          # Create deployment package
          cd dist
          tar -czf ../../frontend-dist.tar.gz .
          cd ../..
          
          echo "=== Frontend build complete ==="
          echo "Bundle size: $(du -sh frontend-dist.tar.gz)"

      - name: Deploy Backend
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 137.184.24.201
          username: root
          key: ${{ secrets.BLUE_SERVER_SSH_KEY }}
          script: |
            cd /var/www/blue.flippi.ai
            echo "=== [$(date)] Starting backend deployment ==="
            
            # Fix git ownership issue
            git config --global --add safe.directory /var/www/blue.flippi.ai
            
            # Pull latest code
            git fetch origin develop
            git reset --hard origin/develop
            echo "Latest commit: $(git log -1 --oneline)"
            
            # Install backend dependencies only
            echo "=== Installing backend dependencies ==="
            cd backend && npm install --production || exit 1
            
            # Run database migrations
            echo "=== Running database migrations ==="
            export FEEDBACK_DB_PATH=/var/www/blue.flippi.ai/backend/flippi.db
            node scripts/run-growth-analytics-migration.js || echo "Migration already applied or failed"
            
            # Restart backend
            cd /var/www/blue.flippi.ai
            pm2 restart dev-backend || pm2 start ecosystem.config.js --only dev-backend

      - name: Upload Frontend Build
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 137.184.24.201
          username: root
          key: ${{ secrets.BLUE_SERVER_SSH_KEY }}
          source: "frontend-dist.tar.gz"
          target: "/tmp/"

      - name: Deploy Frontend
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 137.184.24.201
          username: root
          key: ${{ secrets.BLUE_SERVER_SSH_KEY }}
          script: |
            echo "=== [$(date)] Deploying frontend static files ==="
            
            # Backup existing frontend if it exists
            if [ -d /var/www/blue.flippi.ai/mobile-app/dist ]; then
              echo "Backing up existing frontend..."
              cp -r /var/www/blue.flippi.ai/mobile-app/dist /var/www/blue.flippi.ai/mobile-app/dist.backup.$(date +%Y%m%d-%H%M%S)
            fi
            
            # Clean up old Expo cruft
            echo "=== Cleaning up server ==="
            rm -rf /var/www/blue.flippi.ai/mobile-app/node_modules
            rm -rf /var/www/blue.flippi.ai/mobile-app/.expo
            rm -rf /var/www/blue.flippi.ai/mobile-app/.cache
            rm -rf /var/www/blue.flippi.ai/mobile-app/web-build
            rm -rf /tmp/metro-* /tmp/haste-map-* /tmp/react-*
            rm -rf ~/.expo
            
            # Create clean frontend directory structure
            mkdir -p /var/www/blue.flippi.ai/frontend/dist
            
            # Extract new frontend build
            cd /var/www/blue.flippi.ai/frontend/dist
            tar -xzf /tmp/frontend-dist.tar.gz
            rm /tmp/frontend-dist.tar.gz
            
            # Update nginx to serve from new location
            echo "=== Updating nginx configuration ==="
            sed -i 's|/mobile-app/dist|/frontend/dist|g' /etc/nginx/sites-available/blue.flippi.ai
            nginx -t && systemctl reload nginx
            
            # Stop old frontend process if running
            pm2 stop dev-frontend || true
            pm2 delete dev-frontend || true
            
            echo "=== [$(date)] Deployment complete ==="
            echo "Frontend is now served as static files from /var/www/blue.flippi.ai/frontend/dist"
            
            # Verify deployment
            echo "=== Verifying deployment ==="
            curl -I http://localhost:3002/health || echo "Backend health check"
            curl -I https://blue.flippi.ai || echo "Frontend check"
            
            # Show new bundle hash
            echo "=== Checking bundle hash ==="
            find /var/www/blue.flippi.ai/frontend/dist -name "*.js" | head -5 | xargs grep -l "454acd2934be93420f33a84462ce4be2" || echo "Old bundle hash not found (good!)"

      - name: Post Deployment Status
        if: always()
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 137.184.24.201
          username: root
          key: ${{ secrets.BLUE_SERVER_SSH_KEY }}
          script: |
            echo "=== Deployment Summary ==="
            echo "Backend process:"
            pm2 status dev-backend
            echo ""
            echo "Frontend location:"
            ls -la /var/www/blue.flippi.ai/frontend/dist | head -10
            echo ""
            echo "Nginx status:"
            systemctl status nginx --no-pager | head -10