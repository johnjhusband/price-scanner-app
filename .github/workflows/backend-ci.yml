name: Backend CI

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Run linter
      working-directory: ./backend
      run: npm run lint || true  # Don't fail on lint errors for now
    
    - name: Run tests
      working-directory: ./backend
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret-key
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      if: matrix.node-version == '18.x'
      with:
        name: coverage-report
        path: backend/coverage/

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security audit
      working-directory: ./backend
      run: npm audit --production --audit-level=high || true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install production dependencies
      working-directory: ./backend
      run: npm ci --production
    
    - name: Test server startup
      working-directory: ./backend
      run: |
        npm start &
        SERVER_PID=$!
        sleep 5
        curl -f http://localhost:3000/health || exit 1
        kill $SERVER_PID
      env:
        PORT: 3000
        NODE_ENV: production
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'dummy-key-for-ci' }}