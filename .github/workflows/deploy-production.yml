name: Deploy Production
on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to app.flippi.ai
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 157.245.142.145
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/app.flippi.ai
            # Fix git ownership issue
            git config --global --add safe.directory /var/www/app.flippi.ai
            # Reset any local changes to avoid merge conflicts
            git reset --hard HEAD
            git clean -fd
            # Force update to match remote exactly
            git fetch origin master
            git reset --hard origin/master
            
            # Export build metadata for version endpoint
            export BUILD_VERSION="release-004"
            export COMMIT_SHA=$(git rev-parse --short HEAD)
            export BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            
            # Write build metadata to .env file
            echo "" >> backend/.env
            echo "# Build metadata" >> backend/.env
            echo "BUILD_VERSION=$BUILD_VERSION" >> backend/.env
            echo "COMMIT_SHA=$COMMIT_SHA" >> backend/.env
            echo "BUILD_TIME=$BUILD_TIME" >> backend/.env
            
            cd backend && npm install --production
            
            # Build frontend with better error handling
            cd ../mobile-app 
            echo "=== Building frontend ==="
            npm install
            
            # Remove old dist to ensure clean build
            rm -rf dist
            
            # Build with timeout and verification
            timeout 300 npx expo export --platform web --output-dir dist || {
              echo "ERROR: Expo build failed!"
              exit 1
            }
            
            # Verify build output
            if [ ! -f "dist/index.html" ]; then
              echo "ERROR: dist/index.html not found after build!"
              ls -la dist/ || echo "dist directory missing!"
              exit 1
            fi
            
            echo "Frontend build completed successfully"
            echo "Checking build output:"
            ls -la dist/ | head -5
            grep -E "(script|link)" dist/index.html | head -5 || echo "WARNING: No scripts found in index.html!"
            
            # Fix nginx SSL configuration comprehensively
            echo "=== Running nginx SSL fix script ==="
            cd /var/www/app.flippi.ai
            if [ -f scripts/fix-nginx-ssl-comprehensive.sh ]; then
              echo "Script found, running with sudo..."
              sudo bash scripts/fix-nginx-ssl-comprehensive.sh || echo "SSL fix script had errors but continuing"
            else
              echo "ERROR: fix-nginx-ssl-comprehensive.sh not found!"
              ls -la scripts/
            fi
            
            # Debug: Check what directory PM2 is serving from
            echo "=== PM2 prod-frontend config ==="
            pm2 describe prod-frontend | grep -E "exec cwd|script|args" || true
            echo "=== Checking directories ==="
            ls -la /var/www/app.flippi.ai/mobile-app/ | grep -E "dist|web-build" || true
            echo "=== Files in dist ==="
            ls -la /var/www/app.flippi.ai/mobile-app/dist/ | head -5 || true
            # Just restart, don't delete
            pm2 restart prod-backend prod-frontend
            # Wait for services to start
            sleep 3
            # Check if backend is running
            pm2 show prod-backend || true
            curl -s http://localhost:3000/health || echo "Backend not responding"
            
            # Clear nginx cache
            sudo rm -rf /var/cache/nginx/*
            sudo nginx -s reload
            
            # Run post-deploy nginx fixes
            cd /var/www/app.flippi.ai && bash scripts/post-deploy-nginx.sh || true
            
            # Ensure nginx is properly configured
            echo "=== Testing and restarting nginx ==="
            if sudo nginx -t; then
              echo "Nginx config valid, doing full restart..."
              sudo systemctl stop nginx
              sleep 2
              sudo systemctl start nginx
              sleep 3
              echo "Nginx restarted"
              
              # Verify nginx is actually serving the site config
              echo "=== Verifying nginx is loading site config ==="
              sudo nginx -T 2>/dev/null | grep -A 2 "server_name app.flippi.ai" || echo "WARNING: Site config may not be loaded!"
              
              # Test that index.html is being served
              echo "=== Testing frontend serving ==="
              curl -s http://localhost:80/ | grep -E "(script|Loading)" | head -5
            else
              echo "ERROR: Nginx config invalid!"
              sudo nginx -t
            fi
            
            # Post-deployment verification
            echo "=== Post-Deployment Verification ==="
            echo "Git commit: $(git rev-parse HEAD)"
            echo "Build version: $BUILD_VERSION"
            echo "Build time: $BUILD_TIME"
            
            # Check version endpoint
            sleep 5  # Give services time to fully start
            echo "Version endpoint check:"
            curl -s http://localhost:3000/api/version | jq . || echo "Version endpoint not responding"
            
            # Run nginx cache clear script if available
            if [ -f scripts/clear-nginx-cache.sh ]; then
              bash scripts/clear-nginx-cache.sh prod
            fi