name: Deploy Development
on:
  push:
    branches: [develop]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to blue.flippi.ai
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 157.245.142.145
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/blue.flippi.ai
            echo "=== [$(date)] Starting deployment ==="
            
            # Reset and pull latest code
            git reset --hard HEAD
            git clean -fd
            git fetch origin develop
            git reset --hard origin/develop
            echo "Latest commit: $(git log -1 --oneline)"
            
            # Install backend dependencies
            echo "=== [$(date)] Installing backend dependencies ==="
            cd backend && npm install --production || exit 1
            
            # Install Python dependencies for FotoFlip
            echo "=== [$(date)] Installing Python dependencies for FotoFlip ==="
            pip3 install rembg onnxruntime || echo "Python dependency installation failed"
            
            # Run database migrations
            echo "=== [$(date)] Running database migrations ==="
            export FEEDBACK_DB_PATH=/var/www/blue.flippi.ai/backend/flippi.db
            node scripts/run-growth-analytics-migration.js || echo "Migration already applied or failed"
            
            # Build frontend
            echo "=== [$(date)] Building frontend ==="
            cd ../mobile-app
            # Clean ALL caches and node_modules to fix build issues
            rm -rf node_modules .cache .expo dist web-build package-lock.json
            rm -rf /tmp/metro-* /tmp/haste-map-* /tmp/react-*
            # Clean user-specific expo cache
            rm -rf ~/.expo
            # Clean any babel cache
            rm -rf node_modules/.cache
            # Clean npm and expo caches
            npm cache clean --force
            npx expo prebuild --clear || true
            # Fresh install of dependencies
            npm install || exit 1
            # Verify the App.js has our changes
            echo "Checking App.js first line:"
            head -1 App.js
            # Force clear expo cache one more time before build
            npx expo start --clear --offline --no-dev --max-workers 1 &
            EXPO_PID=$!
            sleep 5
            kill $EXPO_PID 2>/dev/null || true
            # Build with clean cache
            echo "Starting expo export..."
            # Remove any existing dist directory first
            rm -rf dist
            npx expo export --platform web --output-dir dist --clear || { echo "ERROR: Expo export failed"; exit 1; }
            echo "Expo export completed"
            echo "Checking dist directory:"
            ls -la dist/ | head -10 || echo "ERROR: dist directory not found"
            
            # Copy web assets
            cp web-styles.css dist/ || echo "Warning: Could not copy web-styles.css"
            
            # Deploy nginx configuration
            echo "=== [$(date)] Deploying nginx configuration ==="
            bash scripts/deploy-nginx-template.sh blue.flippi.ai || echo "Nginx deployment failed"
            
            # Restart services
            echo "=== [$(date)] Restarting services ==="
            pm2 restart dev-backend dev-frontend
            sleep 5
            
            # Verify deployment
            echo "=== [$(date)] Verifying deployment ==="
            curl -s http://localhost:3002/health || echo "Backend not responding"
            
            # Check what bundle was created
            echo "=== [$(date)] Checking deployed bundle ==="
            ls -la dist/_expo/static/js/web/ | tail -5
            
            echo "Deployment complete"
